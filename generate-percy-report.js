#!/usr/bin/env node

const fs = require('fs');
const path = require('path');

// Function to generate Percy report HTML
function generatePercyReport(percyUrl, buildId) {
  const htmlContent = `
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Percy Visual Test Report</title>
    <link rel="stylesheet" href="percy-report.css">
</head>
<body>
    <div class="container">
        <div class="header">
            <h1>🔍 Percy Visual Test Report</h1>
            <p>Comprehensive visual testing results and analysis</p>
        </div>
        
        <div class="content">
            <div class="section">
                <h2>📊 Build Overview</h2>
                <div class="info-box">
                    <h3>Build Information</h3>
                    <p><strong>Build ID:</strong> ${buildId || 'N/A'}</p>
                    <p><strong>Status:</strong> <span class="status-badge">Completed</span></p>
                    <p><strong>Generated:</strong> ${new Date().toLocaleString()}</p>
                </div>
                
                <a href="${percyUrl}" target="_blank" class="percy-link">
                    🚀 View Full Report in Percy Dashboard
                </a>
            </div>
            
            <div class="section">
                <h2>🎯 What This Report Shows</h2>
                <div class="features-grid">
                    <div class="feature-card">
                        <h3>📸 Snapshot Comparisons</h3>
                        <p>Side-by-side comparison of current snapshots with baseline images, highlighting visual differences and changes.</p>
                    </div>
                    <div class="feature-card">
                        <h3>🔍 Visual Diffs</h3>
                        <p>Detailed analysis of pixel-level differences, showing exactly what changed between versions.</p>
                    </div>
                    <div class="feature-card">
                        <h3>📈 Test Results</h3>
                        <p>Comprehensive test results including pass/fail status, performance metrics, and detailed logs.</p>
                    </div>
                    <div class="feature-card">
                        <h3>🔄 Change Tracking</h3>
                        <p>Track visual changes over time, identify regressions, and maintain visual consistency across builds.</p>
                    </div>
                </div>
            </div>
            
            <div class="section details-section">
                <h2>📋 How to Use This Report</h2>
                <ol>
                    <li><strong>Click the Percy Dashboard link above</strong> to view the full interactive report</li>
                    <li><strong>Review snapshot comparisons</strong> to identify visual changes</li>
                    <li><strong>Analyze visual diffs</strong> to understand what changed</li>
                    <li><strong>Check test results</strong> for any failures or issues</li>
                    <li><strong>Use the insights</strong> to maintain visual quality</li>
                </ol>
            </div>
        </div>
        
        <div class="footer">
            <p>Generated by Percy Visual Testing Platform | Jenkins Integration</p>
        </div>
    </div>
</body>
</html>`;

  return htmlContent;
}

// Main execution
async function main() {
  try {
    // Read the test output log to extract Percy URL
    const logFile = 'test-output.log';
    let percyUrl = 'No Percy URL found';
    let buildId = 'N/A';
    
    if (fs.existsSync(logFile)) {
      const logContent = fs.readFileSync(logFile, 'utf8');
      
      // Extract Percy URL
      const urlMatch = logContent.match(/https:\/\/percy\.io\/[^\s]*/);
      if (urlMatch) {
        percyUrl = urlMatch[0];
        
        // Extract build ID from URL
        const buildMatch = percyUrl.match(/builds\/(\d+)/);
        if (buildMatch) {
          buildId = buildMatch[1];
        }
      }
    }
    
    // Generate the HTML report
    const htmlContent = generatePercyReport(percyUrl, buildId);
    
    // Write the report to file
    fs.writeFileSync('percy-report.html', htmlContent);
    
    console.log('✅ Percy report generated successfully!');
    console.log(`📄 Report saved as: percy-report.html`);
    console.log(`🔗 Percy URL: ${percyUrl}`);
    
  } catch (error) {
    console.error('❌ Error generating Percy report:', error.message);
    process.exit(1);
  }
}

// Run the script
if (require.main === module) {
  main();
}

module.exports = { generatePercyReport };
